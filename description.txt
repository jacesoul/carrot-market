### Set Up 
- npm install -D tailwindcss postcss autoprefixer
- npx tailwindcss init -p
- tailwind.config.js에서 content: ["./pages/**/*.{js,jsx,ts,tsx}"]의 의미는 pages폴더의, 모든 디렉토리의, 그 안의 모든 .js, .jsx, .ts, .tsx로 끝나는 모든 파일에서 우리가 Tailwind를 사용한걸 찾아낸다.

### TOUR OF TAILWIND
- Tailwind CSS는 유틸리티 우선 CSS 프레임워크이다. 
- 유틸리티라는것의 의미는 Tailwind가 아주 많은 클래스네임을 가진다는 뜻이다.
- 결국 Tailwind CSS는 아주 크고, 대빵 크고, 슈퍼 뚠뚠한 CSS파일이라고 보면 된다.
- Tailwind CSS IntelliSense 익스텐션 설치
- rem은 document 폰트 사이즈를 기준으로 하고 브라우저에 따른 사이즈를 달리 가질수 있게 해준다.
- rem을 사용하면 반응형 디자인을 하기가 아주 용이하다.
- flex flex-col에서 space를 사용하면 자식요소에 margin을 줄수 있다. space-y-5를 하면 hidden 되어있지 않은 모든 자식요소에 margin-top과 margin-bottom을 준다.(tailwind의 helper function)
- space-x-5에서 space는 자식 component의 좌우 margin을 알아서 계산해준다. 
- peer modifier은 input의 state에 따라 span의 style을 변경시킬수 있다.
- peer은 peer selector보다 앞쪽에 위치해야한다.
- Tailwind CSS를 사용할 때는 모든 클래스네임이 모바일에 우선 적용되고 그 다음에 보다 큰 화면들을 위한 선택자가 있다. 
- Responsive Modifiers -> sm, md, lg, xl, 2xl
- 반응형 modifier들은 그 다음 modifier들에 의해 정지돼야 한다. 
- 기본값으로 다크모드는 컴퓨터의 환경 설정에 따라 활성화 되게 되어있다. 
- 다크모드를 하기 위해 해야하는 건 dark 선택자를 적어주는것이 전부다. 
- tailwind.config.js에서 darkmode설정이 media로 설정되어 있으면 다크모드 설정은 환경설정을 따라간다. 그러나 class로 바꾸면 브라우저와 컴퓨터가 다크모드임에도 불구하고 다크모드가 활성화되지 않는다.
- class방식에서 다크모드를 활성화하기 위해 필요한 조건은, 단지 dark: 선택자를 쓰는 요소의 부모요소에 dark 클래스네임을 추가하는 것 뿐이다.
- tailwind 3.0 버전이전에는 하나의 커다란 CSS파일이였다. 그리고 웹사이트를 배포하기전에 한가지 할일이 더 있었는데 바로 파일을 청소하는것이다. 그러니까 이전에는 웹사이트 배포를 위해 프로젝트를 빌드할때, 모든 파일의 코드를 스캔해서 CSS파일에 포함된 클래스명을 제외하고 나머지 사용하지 않는 클래스들을 전부 삭제했다. 이 과정을 purging이라고 부른다. 이러한 과정때문에 지금처럼 선택자들을 다른 선택자들의 위에 계속해서 쌓을수 있는 기능을 가지질 못했다.
- 지금은 Just-In-Time 컴파일러라는 것 때문에 가능하다. JIT 컴파일러라는건, 코드를 실시간으로 감시하면서 필요한 클래스를 생성하는 기능이다.  

### TAILWIND PRACTICE

- Tailwind Forms라 불리는 코어 Plugin 설치
- Plugin은 기본적으로 Tailwind 환경에서 부가적인 기능을 더해주는데 어떤 코어, 핵심 Plugins들도 존재한다. 
- heroicons.dev는 오직 svg들의 콜렉션이다. font-awesome과 같은것들처럼 install 할 필요가 없다.
- svg attribute path에 있는 stroke-linecap을 strokeLinecap으로 변경하기
- space-x-1은 div의 그 자식들에게 margin-right과 margin-left를 추가해준다. 
- flex-1을 적용하면 다른 형제 요소보다 flex가 강해진다. flex-1을 적용하면 줄어드는걸 방지할수 있다. 
- text-base는 기본적으로 text를 리셋해주는것이라고 생각하면 된다.
- divide는 어떤 요소의 옆에 형제 요소가 있으면 border를 넣어준다. 
- absolute를 사용할때, 그 부모 컨테이너는 relative가 되어야한다. 
- aspect-video는 자동으로 비디오의 비율 (aspect-ratio)을 준다.(16대9의 비율)
- aspect-square는 원을 만들때 사용할수 있다.(rounded-full 사용)
- 이전에는 너비와 높이를 지정했었는데 만약 높이를 신경쓰고 싶지 않다면 그냥 aspect-square를 쓰면된다.
- space를 사용하는 것이 각각의 요소에 margin을 지정하는 것보다 효율적이고 좋다. 

### DATABASE SETUP

- 